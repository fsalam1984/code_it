<<<<<<< HEAD
"use strict";
=======
'use strict';
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37

Object.defineProperty(exports, "__esModule", {
  value: true
});
<<<<<<< HEAD
exports.default = void 0;

var _default = (context, report) => {
  const sourceCode = context.getSourceCode();
  return functionNode => {
=======

exports.default = function (context, report) {
  var sourceCode = context.getSourceCode();

  return function (functionNode) {
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37
    // skip FunctionTypeAnnotation, possibly another rule as it's an arrow, not a colon?
    // (foo: number) => string
    //              ^^^^
    if (functionNode.returnType && functionNode.type !== 'FunctionTypeAnnotation') {
      report({
        colon: sourceCode.getFirstToken(functionNode.returnType),
        node: functionNode,
        type: 'return type'
      });
    }
  };
};

<<<<<<< HEAD
exports.default = _default;
module.exports = exports.default;
=======
module.exports = exports['default'];
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37
