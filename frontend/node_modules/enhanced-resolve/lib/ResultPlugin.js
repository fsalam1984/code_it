/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
<<<<<<< HEAD

"use strict";

/** @typedef {import("./Resolver")} Resolver */
/** @typedef {import("./Resolver").ResolveStepHook} ResolveStepHook */

module.exports = class ResultPlugin {
	/**
	 * @param {ResolveStepHook} source source
	 */
=======
"use strict";

module.exports = class ResultPlugin {
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37
	constructor(source) {
		this.source = source;
	}

<<<<<<< HEAD
	/**
	 * @param {Resolver} resolver the resolver
	 * @returns {void}
	 */
=======
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37
	apply(resolver) {
		this.source.tapAsync(
			"ResultPlugin",
			(request, resolverContext, callback) => {
<<<<<<< HEAD
				const obj = { ...request };
=======
				const obj = Object.assign({}, request);
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37
				if (resolverContext.log)
					resolverContext.log("reporting result " + obj.path);
				resolver.hooks.result.callAsync(obj, resolverContext, err => {
					if (err) return callback(err);
<<<<<<< HEAD
					if (typeof resolverContext.yield === "function") {
						resolverContext.yield(obj);
						callback(null, null);
					} else {
						callback(null, obj);
					}
=======
					callback(null, obj);
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37
				});
			}
		);
	}
};
