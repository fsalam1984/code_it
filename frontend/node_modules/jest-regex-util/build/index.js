'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
<<<<<<< HEAD
exports.replacePathSepForRegex =
  exports.escapeStrForRegex =
  exports.escapePathForRegex =
    void 0;

var _path = require('path');
=======
exports.replacePathSepForRegex = exports.escapeStrForRegex = exports.escapePathForRegex = void 0;

var _path = _interopRequireDefault(require('path'));

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {default: obj};
}
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37

/**
 * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 */
const escapePathForRegex = dir => {
<<<<<<< HEAD
  if (_path.sep === '\\') {
=======
  if (_path.default.sep === '\\') {
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37
    // Replace "\" with "/" so it's not escaped by escapeStrForRegex.
    // replacePathSepForRegex will convert it back.
    dir = dir.replace(/\\/g, '/');
  }

  return replacePathSepForRegex(escapeStrForRegex(dir));
};

exports.escapePathForRegex = escapePathForRegex;

const escapeStrForRegex = string =>
  string.replace(/[[\]{}()*+?.\\^$|]/g, '\\$&');

exports.escapeStrForRegex = escapeStrForRegex;

const replacePathSepForRegex = string => {
<<<<<<< HEAD
  if (_path.sep === '\\') {
=======
  if (_path.default.sep === '\\') {
>>>>>>> 491790fa3284842aea531bfa9d2fd819794b4f37
    return string.replace(
      /(\/|(.)?\\(?![[\]{}()*+?.^$|\\]))/g,
      (_match, _, p2) => (p2 && p2 !== '\\' ? p2 + '\\\\' : '\\\\')
    );
  }

  return string;
};

exports.replacePathSepForRegex = replacePathSepForRegex;
